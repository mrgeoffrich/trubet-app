  swagger: "2.0"
  info: 
    description: "api.ubet.com"
    version: "1.0.0"
    title: "api.ubet.com"
  host: "vvv5285.cloudapp.net"
  basePath: "/"
  tags: 
    - 
      name: "uchoose-api"
      description: "the uchoose API"
    - 
      name: "sales-api"
      description: "the sales API"
  paths: 
    '/sales/vmax/web/account/history/tickets':
      post:
        tags: 
          - "account"
        description: Get Ticket History
        produces:
          - application/json
        parameters:
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/TicketHistoryRequest'
        responses:
          '200':
            description: TicketHistoryData
            schema:
              $ref: '#/definitions/TicketHistoryData'
              
              
              
    '/sales/vmax/web/account/login':
      post:
        tags: 
          - "account"
        description: logon
        produces:
          - application/json
        parameters:
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/LogonRequest'
        responses:
          '200':
            description: TicketHistoryData
            schema:
              $ref: '#/definitions/LogonResponse'
              
    '/sales/vmax/web/account/details':
      post:
        tags: 
          - "account"
        description: details
        produces:
          - application/json
        parameters:
          - name: body
            in: body
            required: true
            schema:
              $ref: '#/definitions/DetailsRequest'
        responses:
          '200':
            description: TicketHistoryData
            schema:
              $ref: '#/definitions/DetailsResponse'
            
    /sales/vmax/web/data/sports: 
      get: 
        tags: 
          - "sales-api"
        summary: "salesVmaxWebDataSportsGet"
        description: "Sports"
        operationId: "salesVmaxWebDataSportsGetUsingGET"
        consumes: 
          - "application/json"
        produces: 
          - "application/json"
        responses: 
          200: 
            description: "SportsData"
            schema: 
              $ref: "#/definitions/SportsData"
          401: 
            description: "Unauthorized"
          403: 
            description: "Forbidden"
          404: 
            description: "Not Found"
    /sales/vmax/web/data/sports/coupons/{sportId}/0/false: 
      get: 
        tags: 
          - "sales-api"
        summary: "salesVmaxWebDataSportsCouponsSportId0FalseGet"
        description: "coupons"
        operationId: "salesVmaxWebDataSportsCouponsSportId0FalseGetUsingGET"
        consumes: 
          - "application/json"
        produces: 
          - "application/json"
        parameters: 
          - 
            name: "sportId"
            in: "path"
            description: "sportId"
            required: true
            type: "integer"
            format: "int32"
        responses: 
          200: 
            description: "CouponsData"
            schema: 
              $ref: "#/definitions/CouponsData"
          401: 
            description: "Unauthorized"
          403: 
            description: "Forbidden"
          404: 
            description: "Not Found"
    /sales/vmax/web/data/sports/mainevent/{mainEventId}: 
      get: 
        tags: 
          - "sales-api"
        summary: "salesVmaxWebDataSportsMaineventMainEventIdGet"
        description: "mainEvent"
        operationId: "salesVmaxWebDataSportsMaineventMainEventIdGetUsingGET"
        consumes: 
          - "application/json"
        produces: 
          - "application/json"
        parameters: 
          - 
            name: "mainEventId"
            in: "path"
            description: "mainEventId"
            required: true
            type: "integer"
            format: "int32"
        responses: 
          200: 
            description: "MainEventData"
            schema: 
              $ref: "#/definitions/MainEventData"
          401: 
            description: "Unauthorized"
          403: 
            description: "Forbidden"
          404: 
            description: "Not Found"
    /sales/vmax/web/data/sports/meeting/mainevent/subevent/{subEventId}: 
      get: 
        tags: 
          - "sales-api"
        summary: "salesVmaxWebDataSportsMeetingMaineventSubeventSubEventIdGet"
        description: "subevent"
        operationId: "salesVmaxWebDataSportsMeetingMaineventSubeventSubEventIdGetUsingGET"
        consumes: 
          - "application/json"
        produces: 
          - "application/json"
        parameters: 
          - 
            name: "subEventId"
            in: "path"
            description: "subEventId"
            required: true
            type: "integer"
            format: "int32"
        responses: 
          200: 
            description: "SportData"
            schema: 
              $ref: "#/definitions/SportData"
          401: 
            description: "Unauthorized"
          403: 
            description: "Forbidden"
          404: 
            description: "Not Found"
    /sales/vmax/web/data/sports/meeting/{meetingId}: 
      get: 
        tags: 
          - "sales-api"
        summary: "salesVmaxWebDataSportsMeetingMeetingIdGet"
        description: "meetingId"
        operationId: "salesVmaxWebDataSportsMeetingMeetingIdGetUsingGET"
        consumes: 
          - "application/json"
        produces: 
          - "application/json"
        parameters: 
          - 
            name: "meetingId"
            in: "path"
            description: "meetingId"
            required: true
            type: "integer"
            format: "int32"
        responses: 
          200: 
            description: "SportData"
            schema: 
              $ref: "#/definitions/SportData"
          401: 
            description: "Unauthorized"
          403: 
            description: "Forbidden"
          404: 
            description: "Not Found"
    /uchoose/UChooseItems/{loki}: 
      get: 
        tags: 
          - "uchoose-api"
        summary: "UChoose Config"
        description: "You Choose Config"
        operationId: "uchooseUChooseItemsLokiGetUsingGET"
        consumes: 
          - "application/json"
        produces: 
          - "application/json"
        parameters: 
          - 
            name: "loki"
            in: "path"
            description: "loki"
            required: true
            type: "integer"
            format: "int32"
        responses: 
          200: 
            description: "An array of Configs"
            schema: 
              $ref: "#/definitions/UChooseItem"
          401: 
            description: "Unauthorized"
          403: 
            description: "Forbidden"
          404: 
            description: "Not Found"
    /uchoose/config: 
      get: 
        tags: 
          - "uchoose-api"
        summary: "UChoose Config"
        description: "You Choose Config"
        operationId: "uchooseConfigGetUsingGET"
        consumes: 
          - "application/json"
        produces: 
          - "application/json"
        responses: 
          200: 
            description: "An array of Configs"
            schema: 
              $ref: "#/definitions/UChooseConfig"
          401: 
            description: "Unauthorized"
          403: 
            description: "Forbidden"
          404: 
            description: "Not Found"
    /uchoose/config/setup/{meetingId}: 
      get: 
        tags: 
          - "uchoose-api"
        summary: "UChoose Config"
        description: "You Choose Config"
        operationId: "setupByMeetingIdUsingGET"
        consumes: 
          - "application/json"
        produces: 
          - "application/json"
        parameters: 
          - 
            name: "meetingId"
            in: "path"
            description: "meetingId"
            required: true
            type: "integer"
            format: "int32"
        responses: 
          200: 
            description: "An array of Configs"
            schema: 
              $ref: "#/definitions/UChooseItem"
          401: 
            description: "Unauthorized"
          403: 
            description: "Forbidden"
          404: 
            description: "Not Found"
    /uchoose/selectOffer: 
      post: 
        tags: 
          - "uchoose-api"
        summary: "select offer"
        description: "select offer "
        operationId: "uchooseSelectOfferPostUsingPOST"
        consumes: 
          - "application/json"
        produces: 
          - "application/json"
        parameters: 
          - 
            in: "body"
            name: "body"
            description: "body"
            required: true
            schema: 
              $ref: "#/definitions/UChooseBetSelection"
        responses: 
          200: 
            description: "Returns 200 on successful sell"
            schema: 
              $ref: "#/definitions/UChooseItem"
          201: 
            description: "Created"
          401: 
            description: "Unauthorized"
          403: 
            description: "Forbidden"
          404: 
            description: "Not Found"
          500: 
            description: "Something went wrong"
    /uchoose/sell: 
      post: 
        tags: 
          - "uchoose-api"
        summary: "Sell UChoose"
        description: "U Choose Sell "
        operationId: "uchooseSellPostUsingPOST"
        consumes: 
          - "application/json"
        produces: 
          - "application/json"
        parameters: 
          - 
            in: "body"
            name: "body"
            description: "body"
            required: true
            schema: 
              $ref: "#/definitions/UChooseBet"
        responses: 
          200: 
            description: "Returns 200 on successful sell"
            schema: 
              $ref: "#/definitions/UChooseItem"
          201: 
            description: "Created"
          401: 
            description: "Unauthorized"
          403: 
            description: "Forbidden"
          404: 
            description: "Not Found"
          500: 
            description: "Something went wrong"
  definitions: 
    League: 
      type: "object"
      properties: 
        Featured: 
          type: "boolean"
        FeaturedSortOrder: 
          type: "integer"
          format: "int32"
        FeaturedSortOrderForSport: 
          type: "integer"
          format: "int32"
        LeagueId: 
          type: "integer"
          format: "int32"
        LeagueName: 
          type: "string"
        LongDisplayName: 
          type: "string"
        Meetings: 
          type: "array"
          items: 
            $ref: "#/definitions/SportMeeting"
        RegionName: 
          type: "string"
        SortOrder: 
          type: "integer"
          format: "int32"
    Player: 
      type: "object"
      properties: 
        HomePlayer: 
          type: "integer"
          format: "int32"
        PlayerId: 
          type: "integer"
          format: "int32"
        PlayerName: 
          type: "string"
    SubEvent: 
      type: "object"
      properties: 
        BaseSubEventId: 
          type: "integer"
          format: "int32"
        BetTypeDesc: 
          type: "string"
        BetTypeDisplayComment: 
          type: "string"
        BetTypeId: 
          type: "integer"
          format: "int32"
        BetTypeName: 
          type: "string"
        BetTypeShortName: 
          type: "string"
        CashOutEnabled: 
          type: "boolean"
        CloseDateTimeInternetOffset: 
          type: "integer"
          format: "int32"
        DisablePlaceAllUp: 
          type: "boolean"
        DisplayComment: 
          type: "string"
        IsForInternet: 
          type: "boolean"
        LiveBetting: 
          type: "boolean"
        LongDisplayName: 
          type: "string"
        OfferSortMethod: 
          type: "integer"
          format: "int32"
        Offers: 
          type: "array"
          items: 
            $ref: "#/definitions/Offer"
        PlaceBetting: 
          type: "boolean"
        ResultDateTime: 
          type: "string"
        SortOrder: 
          type: "integer"
          format: "int32"
        SpecialConditions: 
          type: "string"
        SpecialPromotion: 
          type: "boolean"
        SpecialSubEventId: 
          type: "integer"
          format: "int32"
        Status: 
          type: "string"
        SubEventId: 
          type: "integer"
          format: "int32"
    UChooseConfig: 
      type: "object"
      properties: 
        MainEvent: 
          $ref: "#/definitions/MainEventDetails"
        mUChooseConfigId: 
          type: "integer"
          format: "int64"
    UChooseBet: 
      type: "object"
      properties: 
        LokiId: 
          type: "integer"
          format: "int32"
        Stake: 
          type: "integer"
          format: "int32"
        UChooseMainEventId: 
          type: "integer"
          format: "int32"
    UChooseItem: 
      type: "object"
      properties: 
        BetTime: 
          type: "string"
          format: "date-time"
        MainEvent: 
          $ref: "#/definitions/MainEventDetails"
        SelectedUChooseOffer: 
          $ref: "#/definitions/Offer"
        Stake: 
          type: "integer"
          format: "int32"
        lokiId: 
          type: "integer"
          format: "int32"
        offerUchooseWinPrice: 
          type: "number"
          format: "double"
        offerWinPriceWhenSelected: 
          type: "number"
          format: "double"
        selectedDateTime: 
          type: "string"
          format: "date-time"
        uChooseBetId: 
          type: "integer"
          format: "int64"
    CouponsDataChild: 
      type: "object"
      properties: 
        Sports: 
          type: "array"
          items: 
            $ref: "#/definitions/Sport"
    LeagueDetails: 
      type: "object"
      properties: 
        LeagueId: 
          type: "integer"
          format: "int32"
        LeagueName: 
          type: "string"
    SportData: 
      type: "object"
      properties: 
        Sport: 
          $ref: "#/definitions/Sport"
    CouponsData: 
      type: "object"
      properties: 
        Sports: 
          $ref: "#/definitions/CouponsDataChild"
    MainEvent: 
      type: "object"
      properties: 
        CashOutEnabled: 
          type: "boolean"
        CountryCode: 
          type: "string"
        CountryName: 
          type: "string"
        EventName: 
          type: "string"
        EventStartTime: 
          type: "string"
        Featured: 
          type: "boolean"
        FeaturedSortOrder: 
          type: "integer"
          format: "int32"
        FeaturedSortOrderForSport: 
          type: "integer"
          format: "int32"
        IsForInternet: 
          type: "boolean"
        LiveBetting: 
          type: "boolean"
        LocationName: 
          type: "string"
        LongDisplayName: 
          type: "string"
        MainEventId: 
          type: "integer"
          format: "int32"
        MarketCount: 
          type: "integer"
          format: "int32"
        SortOrder: 
          type: "integer"
          format: "int32"
        Status: 
          type: "string"
        SubEvents: 
          type: "array"
          items: 
            $ref: "#/definitions/SubEvent"
        VenueName: 
          type: "string"
    MainEventDetails: 
      type: "object"
      properties: 
        CashOutEnabled: 
          type: "boolean"
        CountryCode: 
          type: "string"
        CountryName: 
          type: "string"
        EventName: 
          type: "string"
        EventStartTime: 
          type: "string"
        EventStartTimeAsDate: 
          type: "string"
          format: "date-time"
        Featured: 
          type: "boolean"
        FeaturedSortOrder: 
          type: "integer"
          format: "int32"
        FeaturedSortOrderForSport: 
          type: "integer"
          format: "int32"
        IsForInternet: 
          type: "boolean"
        League: 
          $ref: "#/definitions/LeagueDetails"
        LiveBetting: 
          type: "boolean"
        LocationName: 
          type: "string"
        LongDisplayName: 
          type: "string"
        MainEventId: 
          type: "integer"
          format: "int32"
        MarketCount: 
          type: "integer"
          format: "int32"
        Meeting: 
          $ref: "#/definitions/MeetingDetails"
        Players: 
          type: "array"
          items: 
            $ref: "#/definitions/Player"
        Teams: 
          type: "array"
          items: 
            $ref: "#/definitions/Team"
        SortOrder: 
          type: "integer"
          format: "int32"
        Sport: 
          $ref: "#/definitions/SportDetails"
        Status: 
          type: "string"
        SubEvents: 
          type: "array"
          items: 
            $ref: "#/definitions/SubEvent"
        VenueName: 
          type: "string"
    Sport: 
      type: "object"
      properties: 
        Featured: 
          type: "boolean"
        FeaturedSortOrder: 
          type: "integer"
          format: "int32"
        Leagues: 
          type: "array"
          items: 
            $ref: "#/definitions/League"
        LongDisplayName: 
          type: "string"
        SortOrder: 
          type: "integer"
          format: "int32"
        SportId: 
          type: "integer"
          format: "int32"
        SportName: 
          type: "string"
    Offer: 
      type: "object"
      properties: 
        BaseOfferId: 
          type: "integer"
          format: "int32"
        CalculationFlag: 
          type: "boolean"
        Deduction: 
          type: "number"
          format: "double"
        DisplayHAD: 
          type: "integer"
          format: "int32"
        ExtraValue1: 
          type: "number"
          format: "double"
        ExtraValue2: 
          type: "number"
          format: "double"
        HAD: 
          type: "integer"
          format: "int32"
        IsForInternet: 
          type: "boolean"
        LateScratching: 
          type: "boolean"
        LongDisplayName: 
          type: "string"
        Multiplier: 
          type: "number"
          format: "double"
        OfferId: 
          type: "integer"
          format: "int32"
        OfferName: 
          type: "string"
        PlaceBetting: 
          type: "boolean"
        PlaceDeduction: 
          type: "integer"
          format: "int32"
        PlaceReturn: 
          type: "number"
          format: "double"
        PlayerId: 
          type: "integer"
          format: "int32"
        PlayerName: 
          type: "string"
        PlayerNumber: 
          type: "integer"
          format: "int32"
        Score: 
          type: "integer"
          format: "int32"
        SortOrder: 
          type: "integer"
          format: "int32"
        SpecialOfferId: 
          type: "integer"
          format: "int32"
        Status: 
          type: "string"
        TeamId: 
          type: "integer"
          format: "int32"
        WinReturn: 
          type: "number"
          format: "double"
    MainEventData: 
      type: "object"
      properties: 
        MainEvent: 
          $ref: "#/definitions/MainEventDetails"
    UChooseBetSelection: 
      type: "object"
      properties: 
        OfferId: 
          type: "integer"
          format: "int32"
        UChooseBetId: 
          type: "integer"
          format: "int32"
    MeetingDetails: 
      type: "object"
      properties: 
        MeetignName: 
          type: "string"
        MeetingId: 
          type: "integer"
          format: "int32"
        MeetingName: 
          type: "string"
        MeetingType: 
          type: "string"
    SportMeeting: 
      type: "object"
      properties: 
        Comments: 
          type: "string"
        LongDisplayName: 
          type: "string"
        MainEvents: 
          type: "array"
          items: 
            $ref: "#/definitions/MainEvent"
        MatchRoundSeason: 
          type: "string"
        MeetingId: 
          type: "integer"
          format: "int32"
        MeetingName: 
          type: "string"
        SortOrder: 
          type: "integer"
          format: "int32"
    SportsData: 
      type: "object"
      properties: 
        Sports: 
          type: "array"
          items: 
            $ref: "#/definitions/Sport"
    SportDetails: 
      type: "object"
      properties: 
        SportId: 
          type: "integer"
          format: "int32"
        SportName: 
          type: "string"
          
    Team: 
      type: "object"
      properties: 
        TeamId: 
          type: "integer"
          format: "int32"
        TeamName: 
          type: "string"
        HomeTeam: 
          type: "boolean"
    
    CustomerSession:
      properties:
        SessionId:
          type: string
          
          
    CustomerReference:
      properties:
        CustomerReference:
          type: string
        
    TicketHistoryRequest:
      properties:
        CustomerSession:
          $ref: '#/definitions/CustomerSession'
        TicketSystem:
          type: string
        TicketHistoryStatus:
          type: string
        MaxTickets:
          type: integer
        PeriodFinish:
          type: string
        Extended:
          type: boolean
  
    TicketHistoryData:
      properties:
        TicketDetails:
          type: array
          items:
            $ref: '#/definitions/TicketDetail'
        PageToken:
          type: string
        MoreToCome:
          type: boolean
          
    TicketDetail:
      properties:
        EventDate:
          type: string
        Description:
          type: string
        PartialCashOutHistory:
          type: string
        FreeTickets:
          type: integer
        TicketStatus:
          type: string
        CashOutWinPayout:
          type: number
        TicketCost:
          type: number
        CashOutPayAmount:
          type: number
        SubSystemSerialNo:
          type: integer
        SequenceNumber:
          type: integer
        SubSystemSequenceNo:
          type: integer
        PayAmount:
          type: number
        OriginalSystem:
          type: string
        SubSystemId:
          type: integer
        ExtendedWageringDetails:
          $ref: '#/definitions/ExtendedWageringDetails'
        CashOutWinAmount:
          type: number
        TicketPaymentMethod:
          type: string
        TransactionTime:
          type: string
        SerialNumber:
          type: integer
        CashOutPlaceAmount:
          type: number
        IsCancellable:
          type: boolean
        FmtCardNumber:
          type: integer
        CashOutPlacePayout:
          type: number
        CashOutAvailabilityCode:
          type: string
        SubscriptionItemNo:
          type: string
        CashOutDividend:
          type: string
          
    ExtendedWageringDetails:
      properties:
        ToteTicket:
          type: array
          items:
            $ref: '#/definitions/ToteTicket'
        FixedTicket:
          $ref: '#/definitions/FixedTicket'
    FixedTicket:
      properties:
        CashedOutWWAmount:
          type: number
        SerialNo:
          type: integer
        WWPayout:
          type: number
        Legs:
          type: array
          items:
            $ref: '#/definitions/FixedLeg'
        Refund:
          type: number
        CashedOutPPAmount:
          type: number
        PPPayout:
          type: number
        PPAmount:
          type: number
        WWAmount:
          type: number
        Dividend:
          type: number
    FixedLeg:
      properties:
        BetTypeId:
          type: integer
        CountryName:
          type: string
        WWReturn:
          type: number
        EventNameShort:
          type: string
        SubEventName:
          type: string
        BetTypeName:
          type: string
        LocationName:
          type: string
        OfferId:
          type: integer
        LegNo:
          type: integer
        PPReturn:
          type: number
        OrigWWReturn:
          type: number
        SportId:
          type: integer
        CountryCode:
          type: string
        LeagueId:
          type: integer
        MainEventId:
          type: integer
        EventStartTime:
          type: string
        SubEventId:
          type: integer
        OrigPPReturn:
          type: number
        OfferStatus:
          type: string
        VenueName:
          type: string
        LeagueName:
          type: string
        SportName:
          type: string
        LocationCode:
          type: string
        EventName:
          type: string
        IsRacing:
          type: boolean
        OfferName:
          type: string
        MeetingId:
          type: integer
        MeetingName:
          type: string
    ToteTicket:
      properties:
        Selections:
          type: string
        RaceNo:
          type: integer
        # SelectionLegs:
        #   type: array
        PoolType:
          type: string
        PoolId:
          type: integer
        VenueName:
          type: string
        PPCost:
          type: number
        MtgId:
          type: integer
        Box:
          type: boolean
        MtgCode:
          type: string
        Rover:
          type: boolean
        WWCost:
          type: number
        MtgDate:
          type: string
        BetType:
          type: string
        JumpTime:
          type: string
        Mystery:
          type: string
        PreSale:
          type: boolean
        RaceName:
          type: string
        PoolDisplayStatus:
          type: string
        Location:
          type: string
        Investment:
          type: number
  
    LogonRequest:
      properties:
        Username:
          type: string
        Password:
          type: string
        DeviceKey:
          type: string
        DeviceName:
          type: string
        Referrer:
          type: string
          
    LogonResponse:
      properties:
        CustomerReference:
          type: string


    DetailsRequest:
      properties:
        CustomerSession:
          $ref: '#/definitions/CustomerSession'
          
          
    DetailsResponse:
      properties:
        Details:
          $ref: '#/definitions/Details'
          
          
    Details:
      properties:
        CustomerId:
          type: string
          
          
          
          

          

        



